{
  "openapi" : "3.0.3",
  "info" : {
    "title" : "selc-product",
    "description" : "The services described in this section deal with the management of the Product entity, providing the necessary methods for its creation, consultation and activation.",
    "version" : "0.0.1-SNAPSHOT"
  },
  "servers" : [ {
    "url" : "http://localhost:80",
    "description" : "Inferred Url"
  } ],
  "tags" : [ {
    "name" : "product",
    "description" : "Product's endpoints for CRUD operations"
  } ],
  "paths" : {
    "/products/" : {
      "get" : {
        "tags" : [ "product" ],
        "summary" : "getProducts",
        "description" : "Service that returns the list of PagoPA products",
        "operationId" : "getProductsUsingGET",
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/ProductResource"
                  }
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          }
        },
        "security" : [ {
          "bearerAuth" : [ "global" ]
        } ]
      },
      "post" : {
        "tags" : [ "product" ],
        "summary" : "createProduct",
        "description" : "Service that allows the insert of a new occurrence for the Product entity",
        "operationId" : "createProductUsingPOST",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/CreateProductDto"
              }
            }
          }
        },
        "responses" : {
          "201" : {
            "description" : "Created",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProductResource"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "bearerAuth": [
              "global"
            ]
          }
        ]
      }
    },
    "/products/tree": {
      "get": {
        "tags": [
          "product"
        ],
        "summary": "getProductsTree",
        "description": "Service that returns the list of PagoPA products tree",
        "operationId": "getProductsTreeUsingGET",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProductTreeResource"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "bearerAuth": [
              "global"
            ]
          }
        ]
      }
    },
    "/products/{id}": {
      "get": {
        "tags": [
          "product"
        ],
        "summary": "getProduct",
        "description": "Service that returns the information for a single product given its product id",
        "operationId" : "getProductUsingGET",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Product's unique identifier",
          "required" : true,
          "style" : "simple",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProductResource"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          }
        },
        "security" : [ {
          "bearerAuth" : [ "global" ]
        } ]
      },
      "put" : {
        "tags" : [ "product" ],
        "summary" : "updateProduct",
        "description" : "Service that allows the update of a previously inserted occurrence of the Product entity",
        "operationId" : "updateProductUsingPUT",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Product's unique identifier",
          "required" : true,
          "style" : "simple",
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/UpdateProductDto"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProductResource"
                }
              }
            }
          },
          "201" : {
            "description" : "Created"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          }
        },
        "security" : [ {
          "bearerAuth" : [ "global" ]
        } ]
      },
      "delete" : {
        "tags" : [ "product" ],
        "summary" : "deleteProduct",
        "description" : "Service that allows the deactivation of a specific product by an Admin user",
        "operationId" : "deleteProductUsingDELETE",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Product's unique identifier",
          "required" : true,
          "style" : "simple",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "204" : {
            "description" : "No Content"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          }
        },
        "security" : [ {
          "bearerAuth" : [ "global" ]
        } ]
      }
    },
    "/products/{id}/logo" : {
      "put" : {
        "tags": [
          "product"
        ],
        "summary": "saveProductLogo",
        "description": "Service that allows the update of a Product logo",
        "operationId": "saveProductLogoUsingPUT",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Product's unique identifier",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
        } ],
        "requestBody" : {
          "content" : {
            "multipart/form-data" : {
              "schema" : {
                "required" : [ "logo" ],
                "type" : "object",
                "properties" : {
                  "logo" : {
                    "type" : "string",
                    "description" : "Product's logo",
                    "format" : "binary"
                  }
                }
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object"
                }
              },
              "multipart/form-data" : {
                "schema" : {
                  "type" : "object"
                }
              }
            }
          },
          "201" : {
            "description" : "Created"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "403" : {
            "description" : "Forbidden"
          },
          "404" : {
            "description" : "Not Found"
          }
        },
        "security" : [ {
          "bearerAuth" : [ "global" ]
        } ]
      }
    },
    "/products/{id}/role-mappings" : {
      "get" : {
        "tags" : [ "product" ],
        "summary" : "getProductRoles",
        "description" : "Service that returns the information about mappings between Party's and Product's role",
        "operationId" : "getProductRolesUsingGET",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Product's unique identifier",
          "required" : true,
          "style" : "simple",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "additionalProperties" : {
                    "$ref": "#/components/schemas/ProductRoleInfoRes"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "bearerAuth": [
              "global"
            ]
          }
        ]
      }
    },
    "/products/{id}/sub-products": {
      "put": {
        "tags": [
          "product"
        ],
        "summary": "updateSubProduct",
        "description": "Service that allows the update of a previously inserted occurrence of the Product entity",
        "operationId": "updateSubProductUsingPUT",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Product's unique identifier",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateSubProductDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductResource"
                }
              }
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "bearerAuth": [
              "global"
            ]
          }
        ]
      },
      "post": {
        "tags": [
          "product"
        ],
        "summary": "createSubProduct",
        "description": "Service that allows the insert of a new occurrence for the Product entity",
        "operationId": "createSubProductUsingPOST",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Product's unique identifier",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateSubProductDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductResource"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "bearerAuth": [
              "global"
            ]
          }
        ]
      }
    }
  },
  "components" : {
    "schemas" : {
      "CreateProductDto" : {
        "title": "CreateProductDto",
        "required": [
          "contractTemplatePath",
          "contractTemplateVersion",
          "description",
          "id",
          "identityTokenAudience",
          "roleManagementURL",
          "roleMappings",
          "title",
          "urlBO",
          "urlPublic"
        ],
        "type": "object",
        "properties": {
          "contractTemplatePath": {
            "type": "string",
            "description": "The path of contract"
          },
          "contractTemplateVersion": {
            "type": "string",
            "description": "Version of the contract"
          },
          "description": {
            "type": "string",
            "description": "Product's description"
          },
          "id": {
            "type": "string",
            "description": "Product's unique identifier"
          },
          "identityTokenAudience": {
            "type": "string",
            "description": "Product's identity token audience"
          },
          "roleManagementURL": {
            "type": "string",
            "description": "Url of the utilities management"
          },
          "roleMappings": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/ProductRoleInfoReq"
            },
            "description": "Mappings between Party's and Product's role"
          },
          "title": {
            "type": "string",
            "description": "Product's title"
          },
          "urlBO": {
            "type": "string",
            "description": "URL that redirects to the back-office section, where is possible to manage the product"
          },
          "urlPublic": {
            "type": "string",
            "description": "URL that redirects to the public information webpage of the product"
          }
        }
      },
      "CreateSubProductDto": {
        "title": "CreateSubProductDto",
        "required": [
          "contractTemplatePath",
          "contractTemplateVersion",
          "id",
          "title"
        ],
        "type": "object",
        "properties": {
          "contractTemplatePath": {
            "type": "string",
            "description": "The path of contract"
          },
          "contractTemplateVersion": {
            "type": "string",
            "description": "Version of the contract"
          },
          "id": {
            "type": "string",
            "description": "Product's unique identifier"
          },
          "title": {
            "type": "string",
            "description": "Product's title"
          }
        }
      },
      "ProductResource": {
        "title": "ProductResource",
        "required": [
          "contractTemplatePath",
          "contractTemplateUpdatedAt",
          "contractTemplateVersion",
          "createdAt",
          "id",
          "identityTokenAudience",
          "title"
        ],
        "type": "object",
        "properties": {
          "contractTemplatePath": {
            "type": "string",
            "description": "The path of contract"
          },
          "contractTemplateUpdatedAt": {
            "type": "string",
            "description": "Date the contract was postponed",
            "format": "date-time"
          },
          "contractTemplateVersion": {
            "type": "string",
            "description": "Version of the contract"
          },
          "createdAt": {
            "type": "string",
            "description": "Date the products was activated/created",
            "format": "date-time"
          },
          "description": {
            "type": "string",
            "description": "Product's description"
          },
          "id": {
            "type": "string",
            "description": "Product's unique identifier"
          },
          "identityTokenAudience": {
            "type": "string",
            "description": "Product's identity token audience"
          },
          "logo": {
            "type": "string",
            "description": "Product's logo"
          },
          "parentId": {
            "type": "string",
            "description": "Root parent of the sub product"
          },
          "roleManagementURL": {
            "type": "string",
            "description": "Url of the utilities management"
          },
          "roleMappings": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/ProductRoleInfoRes"
            },
            "description": "Mappings between Party's and Product's role"
          },
          "title": {
            "type": "string",
            "description": "Product's title"
          },
          "urlBO": {
            "type": "string",
            "description": "URL that redirects to the back-office section, where is possible to manage the product"
          },
          "urlPublic": {
            "type": "string",
            "description": "URL that redirects to the public information webpage of the product"
          }
        }
      },
      "ProductRole": {
        "title": "ProductRole",
        "required": [
          "code",
          "description",
          "label"
        ],
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "description": "Product role internal code"
          },
          "description": {
            "type": "string",
            "description": "Product role description"
          },
          "label": {
            "type": "string",
            "description": "Product role label"
          }
        }
      },
      "ProductRoleInfoReq": {
        "title": "ProductRoleInfoReq",
        "required": [
          "multiroleAllowed",
          "roles"
        ],
        "type": "object",
        "properties": {
          "multiroleAllowed": {
            "type": "boolean",
            "description": "Flag indicating if a User can have more than one product role",
            "example": false
          },
          "roles": {
            "type": "array",
            "description": "Available product roles",
            "items": {
              "$ref": "#/components/schemas/ProductRoleOperations"
            }
          }
        }
      },
      "ProductRoleInfoRes": {
        "title": "ProductRoleInfoRes",
        "required": [
          "multiroleAllowed",
          "roles"
        ],
        "type": "object",
        "properties": {
          "multiroleAllowed": {
            "type": "boolean",
            "description": "Flag indicating if a User can have more than one product role",
            "example": false
          },
          "roles": {
            "type": "array",
            "description": "Available product roles",
            "items": {
              "$ref": "#/components/schemas/ProductRole"
            }
          }
        }
      },
      "ProductRoleOperations": {
        "title": "ProductRoleOperations",
        "type": "object",
        "properties": {
          "code": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "label": {
            "type": "string"
          }
        }
      },
      "ProductTreeResource": {
        "title": "ProductTreeResource",
        "type": "object",
        "properties": {
          "children": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProductResource"
            }
          },
          "node": {
            "$ref": "#/components/schemas/ProductResource"
          }
        }
      },
      "UpdateProductDto": {
        "title": "UpdateProductDto",
        "required": [
          "contractTemplatePath",
          "contractTemplateVersion",
          "description",
          "identityTokenAudience",
          "roleManagementURL",
          "roleMappings",
          "title",
          "urlBO",
          "urlPublic"
        ],
        "type": "object",
        "properties": {
          "contractTemplatePath": {
            "type": "string",
            "description": "The path of contract"
          },
          "contractTemplateVersion": {
            "type": "string",
            "description": "Version of the contract"
          },
          "description": {
            "type": "string",
            "description": "Product's description"
          },
          "identityTokenAudience": {
            "type": "string",
            "description": "Product's identity token audience"
          },
          "roleManagementURL": {
            "type": "string",
            "description": "Url of the utilities management"
          },
          "roleMappings": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/ProductRoleInfoReq"
            },
            "description": "Mappings between Party's and Product's role"
          },
          "title": {
            "type": "string",
            "description": "Product's title"
          },
          "urlBO": {
            "type": "string",
            "description": "URL that redirects to the back-office section, where is possible to manage the product"
          },
          "urlPublic": {
            "type": "string",
            "description": "URL that redirects to the public information webpage of the product"
          }
        }
      },
      "UpdateSubProductDto": {
        "title": "UpdateSubProductDto",
        "required": [
          "contractTemplatePath",
          "contractTemplateVersion",
          "title"
        ],
        "type": "object",
        "properties": {
          "contractTemplatePath": {
            "type": "string",
            "description": "The path of contract"
          },
          "contractTemplateVersion": {
            "type": "string",
            "description": "Version of the contract"
          },
          "title": {
            "type": "string",
            "description": "Product's title"
          }
        }
      }
    },
    "securitySchemes" : {
      "bearerAuth" : {
        "type" : "http",
        "description" : "A bearer token in the format of a JWS and conformed to the specifications included in [RFC8725](https://tools.ietf.org/html/RFC8725)",
        "scheme" : "bearer",
        "bearerFormat" : "JWT"
      }
    }
  }
}